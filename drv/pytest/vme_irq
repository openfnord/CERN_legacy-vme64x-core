#!/usr/bin/python
    
import pyvmelib
import sys, getopt
import os
import struct

def base_addr(slot):
	slot_m = int(slot) 
	slot_m = slot_m << 19
	return hex(slot_m)

def main(argv):

	try:
		opts, args = getopt.getopt(argv,"hs:v:l:",["help"])
	except getopt.GetoptError:
		print 'vme_read -s <vme slot> -v <irq vector> -l <irq level>'
		sys.exit(2)

	if (len(sys.argv) <= 1 or len(sys.argv) != 7):
		print 'vme_read -s <vme slot> -v <irq vector> -l <irq level>'
		sys.exit()

	for opt, arg in opts:
		if opt == '-h':
			print 'vme_read -s <vme slot> -v <irq vector> -l <irq level>'
			sys.exit()
		elif opt in ("-l"):
			 irq_level = arg
		elif opt in ("-v"):
			irq_vector = arg
		elif opt in ("-s"):
			slot = arg

	if int(irq_level) >= 7:
		print 'Please set a IRQ Level between 1-7'
	
	print "Setting VME card in slot", slot, "IRQ vector",irq_vector, "in a memory space of", irq_level

	map = pyvmelib.Mapping(am=0x2f, base_address= int(base_addr(slot),16), data_width=16, size=512*1024)
	
	if map.vaddr == None :
		print "Not able to reach the card in slot",slot
		sys.exit()

	map.write(offset=0x7FF63, values=192, width=8)
	map.write(offset=0x7FF67, values=0, width=8)
	map.write(offset=0x7FF6B, values=0, width=8)
	map.write(offset=0x7FF6F, values=36, width=8)
	map.write(offset=0x7FFFB, values=16, width=8)

	#IRQ
	map.write(offset=0x7FF5F, values=int(irq_vector), width=8)
	map.write(offset=0x7FF5B, values=int(irq_level),  width=8)

	#map.unmap()

if __name__ == "__main__":
   main(sys.argv[1:])
